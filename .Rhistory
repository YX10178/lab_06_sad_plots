position = position_stack(vjust = 0.5)) +
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank())
ggplot(capture_data, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank())
ggplot(capture_data, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(capture_data, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
View(top_10)
capture_data <- top_10 %>%
select(country, capture) %>%
mutate(percentage = capture / sum(capture) * 100)
aquaculture_data <- top_10 %>%
select(country, aquaculture) %>%
mutate(percentage = aquaculture / sum(aquaculture) * 100)
View(top_10)
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
capture_data <- top_10 %>%
select(country, capture) %>%
mutate(percentage = capture / sum(capture) * 100)
aquaculture_data <- top_10 %>%
select(country, aquaculture) %>%
mutate(percentage = aquaculture / sum(aquaculture) * 100)
View(capture_data)
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
select(country, capture) %>%
mutate(percentage = capture / sum(capture) * 100)
top_10 <- top_10 %>%
select(country, aquaculture) %>%
mutate(percentage = aquaculture / sum(aquaculture) * 100)
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
select(country, capture) %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- top_10 %>%
select(country, aquaculture) %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
View(fisheries)
fisheries <- read_csv("data/fisheries.csv")
#(1) in the pie chart, there are too many small categories, hard to tell
#(2) the color is ugly...
#(3) Combining all countries into one chart makes it messy. only select the top 10 countries to compare would be more clear
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
View(top_10)
top_10 <- top_10 %>%
select(country, capture) %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
View(top_10)
top_10 <- top_10 %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- top_10 %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
ggplot(top_10$percentage_capture, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(top_10, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(top_10, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_capture, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(aquaculture_data, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_aquaculture, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
ggplot(top_10, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_aquaculture, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
fisheries <- read_csv("data/fisheries.csv")
#(1) in the pie chart, there are too many small categories, hard to tell
#(2) the color is ugly...
#(3) Combining all countries into one chart makes it messy. only select the top 10 countries to compare would be more clear
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- top_10 %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
ggplot(top_10, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_capture, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(top_10, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_aquaculture, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
fisheries <- read_csv("data/fisheries.csv")
#(1) in the pie chart, there are too many small categories, hard to tell
#(2) the color is ugly...
#(3) Combining all countries into one chart makes it messy. only select the top 10 countries to compare would be more clear
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- top_10 %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
ggplot(top_10, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_capture, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(top_10, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_aquaculture, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
fisheries <- read_csv("data/fisheries.csv")
fisheries <- read_csv("data/fisheries.csv")
library(tidyverse)
library(dsbox)
library(mosaicData)
staff <- read_csv("data/instructional-staff.csv")
##Each row in this dataset represents a faculty type, and the columns are the years for which we have data. The values are percentage of hires of that type of faculty for each year.
staff_long <- staff %>%
pivot_longer(cols = -faculty_type, names_to = "year") %>%
mutate(value = as.numeric(value))
staff_long
staff_long %>%
ggplot(aes(x = year, y = value, color = faculty_type)) +
geom_line()
## `geom_line()`: Each group consists of only one observation.
## ℹ Do you need to adjust the group aesthetic?
## To address this, we can use the group aesthetic in the following code.
staff_long %>%
ggplot(aes(
x = year,
y = value,
group = faculty_type,
color = faculty_type
)) +
geom_line() + labs (
title = "Faculty Trends Over Time", x = "Year", y = "Percentage of Hires") +   theme_minimal()
## Suppose the objective of this plot was to show that the proportion of part-time faculty have gone up over time compared to other instructional staff types.
## the goal is to compare proportions, we should normalize the data so that each year sums to 100%.
staff_long <- staff_long %>%
group_by(year) %>%
mutate(proportion = value / sum(value))
staff_long %>%
group_by(faculty_type) %>%
ggplot(aes(
x = year,
y = proportion,
fill = faculty_type))+
geom_bar(stat = "identity", position = "fill")+
labs(
title = "Proportion of Part-Time Faculty Over Time",
x = "Year",
y = "Proportion of Faculty",
fill = "Faculty Type"
) +
coord_flip()+
theme_minimal()
fisheries <- read_csv("data/fisheries.csv")
#(1) in the pie chart, there are too many small categories、
#(2) the color is ugly...
#(3) Combining all countries into one chart makes it messy. only select the top 10 countries to compare would be more clear
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
mutate(percentage_capture = capture / sum(capture) * 100)
top_10 <- top_10 %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
ggplot(top_10, aes(x = "", y = "", fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_capture, 1), "%")),
position = position_stack(vjust = 0.5)) + #adds percentage labels      inside the chart.
labs(
title = "Capture Fisheries - Top 10 Countries",
fill = "Country"
) +
theme_minimal()+
theme(axis.text = element_blank(), axis.ticks = element_blank()) # removes x- and y-axis text/ticks.
ggplot(top_10, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
geom_text(aes(label = paste0(round(percentage_aquaculture, 1), "%")),
position = position_stack(vjust = 0.5)) +
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
fisheries <- read_csv("data/fisheries.csv")
#(1) in the pie chart, there are too many small categories、
#(2) the color is ugly...
#(3) Combining all countries into one chart makes it messy. only select the top 10 countries to compare would be more clear
fisheries_long <- fisheries %>%
pivot_longer(cols = c("capture", "aquaculture"), names_to = "type", values_to = "value")
top_10 <- fisheries %>%
arrange(desc(total)) %>%
slice(1:10)
top_10 <- top_10 %>%
mutate(percentage_aquaculture = aquaculture / sum(aquaculture) * 100)
ggplot(top_10, aes(x = "", y = aquaculture, fill = country)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +  # Convert to pie chart
labs(
title = "Aquaculture - Top 10 Countries",
fill = "Country"
) +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank())
library(tidyverse)
library(mosaicData)
data(Whickham)
?Whickham
library(performance)
force(Whickham)
library(ggplot2)
library(dplyr)
##three variables: outcome, smoker, and age.
##Outcome (Categorical)
ggplot(Whickham, aes(x = outcome, fill = outcome)) +
geom_bar() +
labs(title = "Distribution of Survival Status", x = "Survival Status", y = "Count") +
theme_minimal()
##Smoker (Categorical)
##Age (Continuous)
library(ggplot2)
library(dplyr)
##three variables: outcome, smoker, and age.
##Outcome (Categorical)
ggplot(Whickham, aes(x = outcome)) +
geom_bar() +
labs(title = "Distribution of Survival Status", x = "Survival Status", y = "Count") +
theme_minimal()
##Smoker (Categorical)
##Age (Continuous)
View(Whickham)
library(ggplot2)
library(dplyr)
##three variables: outcome, smoker, and age.
##Outcome (Categorical)
ggplot(Whickham, aes(x = outcome, fill = outcome)) +
geom_bar() +
labs(title = "Distribution of Survival Status", x = "Survival Status", y = "Count") +
theme_minimal()
##Smoker (Categorical)
ggplot(Whickham, aes(x = smoker, fill = smoker)) +
geom_bar() +
labs(title = "Distribution of Smoking Status", x = "Smoking Status", y = "Count") +
theme_minimal()
##Age (Continuous)
library(ggplot2)
library(dplyr)
##three variables: outcome, smoker, and age.
##Outcome (Categorical)
ggplot(Whickham, aes(x = outcome)) +
geom_bar() +
labs(title = "Distribution of Survival Status", x = "Survival Status", y = "Count") +
theme_minimal()
##Smoker (Categorical)
ggplot(Whickham, aes(x = smoker)) +
geom_bar() +
labs(title = "Distribution of Smoking Status", x = "Smoking Status", y = "Count") +
theme_minimal()
##Age (Continuous)
library(ggplot2)
library(dplyr)
##three variables: outcome, smoker, and age.
##Outcome (Categorical)
ggplot(Whickham, aes(x = outcome)) +
geom_bar() +
labs(title = "Distribution of Survival Status", x = "Survival Status", y = "Count") +
theme_minimal()
##Smoker (Categorical)
ggplot(Whickham, aes(x = smoker)) +
geom_bar() +
labs(title = "Distribution of Smoking Status", x = "Smoking Status", y = "Count") +
theme_minimal()
##Age (Continuous)
ggplot(Whickham, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age Distribution of Participants", x = "Age (years)", y = "Frequency") +
theme_minimal()
ggplot(Whickham, aes(x = age)) +
geom_density(fill = "blue", alpha = 0.5) +
labs(title = "Age Density Plot", x = "Age (years)", y = "Density") +
theme_minimal()
ggplot(Whickham, aes(x = age)) +
geom_density(fill = "blue", alpha = 0.3) +
labs(title = "Age Density Plot", x = "Age (years)", y = "Density") +
theme_minimal()
Whickham %>%
count(smoker, outcome)
Whickham %>%
count(smoker, outcome)
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +  # Normalize counts to proportions
labs(title = "Survival Proportion by Smoking Status",
x = "Smoking Status",
y = "Proportion",
fill = "Outcome") +
theme_minimal()
Whickham %>%
count(smoker, outcome)
Whickham %>%
count(smoker, outcome) %>%
group_by(smoker) %>%
mutate(proportion = n / sum(n))
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
labs(title = "Survival Proportion by Smoking Status",
x = "Smoking Status",
y = "Proportion",
fill = "Outcome") +
theme_minimal()
Whickham %>%
count(smoker, outcome) %>%
group_by(smoker) %>%
mutate(proportion = n / sum(n))
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +  #Normalizes the bar heights
labs(title = "Survival Proportion by Smoking Status",
x = "Smoking Status",
y = "Proportion",
fill = "Outcome") +
theme_minimal()
Whickham <- Whickham %>%
mutate(age_cat = case_when(
age <= 44 ~ "18-44",
age > 44 & age <= 64 ~ "45-64",
age > 64 ~ "65+"
))
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
facet_wrap(~ age_cat) +        # Facet by age category
labs(title = "Proportion of Survival by Smoking Status Across Age Groups",
x = "Smoking Status", y = "Proportion",
fill = "Outcome") +
theme_minimal()
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
Whickham %>%
group_by(age_cat) %>%
mutate(proportion = n / sum(n))
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
facet_wrap(~ age_cat) +        # Facet by age category
labs(title = "Proportion of Survival by Smoking Status Across Age Groups",
x = "Smoking Status", y = "Proportion",
fill = "Outcome") +
theme_minimal()
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
facet_wrap(~ age_cat) +        # Facet by age category
labs(title = "Proportion of Survival by Smoking Status Across Age Groups",
x = "Smoking Status", y = "Proportion",
fill = "Outcome") +
theme_minimal()
contingency_table <- Whickham %>%
count(age_cat, smoker, outcome) %>%
group_by(age_cat, smoker) %>%
mutate(proportion = n / sum(n))
## The proportion of "Dead" is lager in "yes" groups compared to in the "no" group.
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
facet_wrap(~ age_cat) +        # Facet by age category
labs(title = "Proportion of Survival by Smoking Status Across Age Groups",
x = "Smoking Status", y = "Proportion",
fill = "Outcome") +
theme_minimal()
contingency_table <- Whickham %>%
count(age_cat, smoker, outcome) %>%
group_by(age_cat, smoker) %>%
mutate(proportion = n / sum(n))
contingency_table
## The proportion of "Dead" is lager in "yes" groups compared to in the "no" group.
##Re-create the visualization depicting the relationship between smoking status and health outcome, faceted by age_cat
##Extend the contingency table from earlier by breaking it down by age category and use it to help your narrative. We can use the contingency table to examine how the relationship between smoking status and health outcome differs between different age groups. This extension will help us better understand the patterns we see in the visualization, and explain any changes we observe.
ggplot(Whickham, aes(x = smoker, fill = outcome)) +
geom_bar(position = "fill") +
facet_wrap(~ age_cat) +        # Facet by age category
labs(title = "Proportion of Survival by Smoking Status Across Age Groups",
x = "Smoking Status", y = "Proportion",
fill = "Outcome") +
theme_minimal()
## The proportion of "Dead" is lager in "yes" groups compared to in the "no" group.
Whickham %>%
count(smoker, age_cat, outcome)
